"""
Set intersect , Keller(Example programs used in the SPDZ tutorial at the TPMPC 2017 workshop in Bristol.)
Adapted by Jacob Obrman

Example programs used in the SPDZ tutorial at the TPMPC 2017 workshop in Bristol.
"""

from util import if_else

program.bit_length = 64

def compute_intersection(a, b):
	""" Naive quadratic private set intersection.

	Returns: secret Array with intersection (padded to len(a)), and
	secret Array of bits indicating whether Alice's input matches or not """
	n = len(a)
	if n != len(b):
		raise CompilerError('Inconsistent lengths to compute_intersection')
	intersection = sint.Array(n)

	@for_range(n)
	def _(i):
		@for_range(n)
		def _(j):
			intersection[i] = if_else(a[i] == b[j], a[i], sint(0)) # match * a[i] + (1 - match) * intersection[i]
	return intersection

n = int(program.args[1])

a = sint.Array(n)
a.input_from(0)
b = sint.Array(n)
b.input_from(1)

print_ln('Intersection')
intersection = compute_intersection(a,b)

intersection.print_reveal_nested()